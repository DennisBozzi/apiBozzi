<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Services/FirebaseService.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Services/FirebaseService.cs" />
              <option name="originalContent" value="namespace apiBozzi.Services;&#10;&#10;public class FirebaseService&#10;{&#10;    private readonly HttpClient _httpClient;&#10;}" />
              <option name="updatedContent" value="namespace apiBozzi.Services;&#10;&#10;public class FirebaseService&#10;{&#10;    private readonly HttpClient _httpClient;&#10;&#10;    public FirebaseService(HttpClient httpClient)&#10;    {&#10;        _httpClient = httpClient;&#10;    }&#10;&#10;    public async Task&lt;string&gt; LoginAsync(string email, string password, string apiKey)&#10;    {&#10;        var url = $&quot;https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={apiKey}&quot;;&#10;        var payload = new&#10;        {&#10;            email = email,&#10;            password = password,&#10;            returnSecureToken = true&#10;        };&#10;        var content = new StringContent(System.Text.Json.JsonSerializer.Serialize(payload), System.Text.Encoding.UTF8, &quot;application/json&quot;);&#10;        var response = await _httpClient.PostAsync(url, content);&#10;        response.EnsureSuccessStatusCode();&#10;        var responseBody = await response.Content.ReadAsStringAsync();&#10;        return responseBody;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/Models/Responses/ApartmentResponse.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Models/Responses/ApartmentResponse.cs" />
              <option name="originalContent" value="namespace apiBozzi.Models.Responses;&#10;&#10;public class ApartmentResponse&#10;{&#10;    &#10;}" />
              <option name="updatedContent" value="using apiBozzi.Models.FelicianoBozzi;&#10;using apiBozzi.Models.Enums;&#10;&#10;namespace apiBozzi.Models.Responses;&#10;&#10;public class ApartmentResponse&#10;{&#10;    public int Id { get; set; }&#10;    public DateTime CreatedAt { get; set; }&#10;    public string Number { get; set; } = string.Empty;&#10;    public decimal Rent { get; set; }&#10;    public FloorEnum Floor { get; set; }&#10;    public TenantResponse? ResponsibleTenant { get; set; }&#10;&#10;    public ApartmentResponse(Apartment value)&#10;    {&#10;        Id = value.Id;&#10;        CreatedAt = value.CreatedAt;&#10;        Number = value.Number;&#10;        Rent = value.Rent;&#10;        Floor = value.Floor;&#10;        ResponsibleTenant = value.ResponsibleTenant != null ? new TenantResponse(value.ResponsibleTenant) : null;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>